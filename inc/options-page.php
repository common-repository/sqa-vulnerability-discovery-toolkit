<?php
/* Wrapper for all our admin area functionality. */
class sqa_nvdt_Admin_Page
{
    private static $ins = null;

    protected $sqa_nvdt_securitysetting = 'sqa_nvdt_security_content';
    protected $sqa_nvdt_policysetting = 'sqa_nvdt_policy_content';

    public static function instance()
    {
        if (null === self::$ins) {
            self::$ins = new self();
        }

        return self::$ins;
    }

    /* Initalise the admin area */
    public static function init()
    {
        add_action('admin_init', array(self::instance(), 'sqa_nvdt_settings'));
        add_filter(sprintf('plugin_action_links_%s', SQA_NVDT_PLUGIN_NAME), array(static::instance(), 'sqa_nvdt_showLink'));
    }

    /* Adds a link to the settings page in the plugin action links row. */
    public function sqa_nvdt_showLink($links)
    {
        $links[] = sprintf(
            '<a href="%s">%s</a>',
            admin_url('options-writing.php#sqa-nvdt-settings'),
            __('settings', 'sqa-nvdt-security-txt')
        );

        return $links;
    }

    /* Register our configuration in the security.txt file */
    public function sqa_nvdt_settings()
    {
        register_setting(
            'writing', 
            $this->sqa_nvdt_securitysetting,
            array($this, 'sqa_nvdt_cleansetting')
        );

        register_setting(
            'writing', 
            $this->sqa_nvdt_policysetting,
            array($this, 'sqa_nvdt_cleansetting')
        );

        add_settings_section(
            'sqa-nvdt-security-txt',
            __('NCSC Vulnerability Discovery', 'sqa-nvdt-security-txt'),
            array($this, 'sqa_nvdt_print_section_anchor'),
            'writing'
        );

        add_settings_field(
            'sqa_nvdt_security_content',
            __('security.txt Content', 'sqa-nvdt-security-txt'),
            array($this, 'sqa_nvdt_security_field'),
            'writing',
            'sqa-nvdt-security-txt',
            array('label_for' => $this->sqa_nvdt_securitysetting)
        );

        add_settings_section(
            'sqa-nvdt-policy-txt',
            __('', 'sqa-nvdt-policy-txt'),
            array($this, 'sqa_nvdt_print_section_anchor'),
            'writing'
        );

        add_settings_field(
            'sqa_nvdt_policy_content',
            __('policy.txt Content', 'sqa-nvdt-policy-txt'),
            array($this, 'sqa_nvdt_policy_field'), 
            'writing',
            'sqa-nvdt-policy-txt',
            array('label_for' => $this->sqa_nvdt_policysetting)
        );
    }

    /* Callback for the settings field. */
    public function sqa_nvdt_security_field()
    {
        $content = get_option($this->sqa_nvdt_securitysetting);
        if (!$content) {
            $content = $this->sqa_nvdt_get_default('Security');
        }

        printf(
            '<textarea name="%1$s" id="%1$s" rows="10" class="large-text">%2$s</textarea>',
            esc_attr($this->sqa_nvdt_securitysetting),
            esc_textarea($content)
        );

        echo '<p class="description">';
        _e('The content of your security.txt file.  Delete the above and save to restore the default.', 'sqa-nvdt-security-txt');
        echo '</p>';
    }

    public function sqa_nvdt_policy_field()
    {
        $content = get_option($this->sqa_nvdt_policysetting);
        if (!$content) {
            $content = $this->sqa_nvdt_get_default('Policy');
        }

        printf(
            '<textarea name="%1$s" id="%1$s" rows="10" class="large-text">%2$s</textarea>',
            esc_attr($this->sqa_nvdt_policysetting),
            esc_textarea($content)
        );

        echo '<p class="description">';
        _e('The content of your policy.txt file.  Delete the above and save to restore the default.', 'sqa-nvdt-policy-txt');
        echo '</p>';
    }

    public function sqa_nvdt_print_section_anchor()
    {
        echo '<a name="sqa-nvdt-security-txt-settings"></a>';
    }

    /* Strips tags and escapes any html entities that goes into the security.txt field */
    public function sqa_nvdt_cleansetting($in)
    {
        if (empty($in)) {
            add_settings_error(
                $this->sqa_nvdt_securitysetting,
                'sqa-nvdt-restored',
                __('security.txt restored to default.', 'sqa-nvdt-security-txt'),
                'updated'
            );

            add_settings_error(
                $this->sqa_nvdt_policysetting,
                'sqa-nvdt-restored',
                __('policy.txt restored to default.', 'sqa-nvdt-policy-txt'),
                'updated'
            );
        }
        return esc_html(strip_tags($in));
    }
    
    protected function sqa_nvdt_get_default($type)
    {
        if ($type == 'Security') {
            $email = get_option(admin_email);
            $siteurl = site_url();
            $output = "Contact: $email\n\n";
            $output .= "Encryption: {gpg public encryption key} \n\n";
            $output .= "Policy: $siteurl/.well-known/policy.txt\n";
            return $output;
        }
        elseif ($type == 'Policy') {
            $output = file_get_contents(SQA_NVDT_PLUGIN_DIR . 'policy.txt', "r" );
            return $output; 
        }
    }
}